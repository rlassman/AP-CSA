public class Driver {
	public static void main(String[] args) {
		LassmanLiuStrategy s = new LassmanLiuStrategy();
		BlackjackDealer test = new BlackjackDealer();
		ComputerBlackjackPlayer c = new ComputerBlackjackPlayer(s);
		System.out.println(test.playBlackjack(c, 1000));
		System.out.println(test.playBlackjack(c, 1000));
		System.out.println(test.playBlackjack(c, 1000));
		System.out.println(test.playBlackjack(c, 1000));
		System.out.println(test.playBlackjack(c, 1000));
		System.out.println(test.playBlackjack(c, 1000));
		/*HumanBlackjackPlayer testPlayer = new HumanBlackjackPlayer();
		System.out.println(test.playBlackjack(testPlayer, 6));
		/*MySimpleStrategy s = new MySimpleStrategy();
		System.out.println(s.hit(15, 11, true));
		System.out.println(s.hit(15, 11, false)); 
		System.out.println(s.hit(11, 10, false));
		System.out.println(s.hit(17, 7, false)); 
		System.out.println(s.hit(16, 6, false)); 
		System.out.println(s.hit(17, 2, true));
		BlackjackDealer test = new BlackjackDealer();
		ComputerBlackjackPlayer c = new ComputerBlackjackPlayer(s);
		System.out.println(test.playBlackjack(c, 1000));*/
	}
}
/*BlackjackDealer test = new BlackjackDealer();
MySimpleStrategy s = new MySimpleStrategy();
ComputerBlackjackPlayer c = new ComputerBlackjackPlayer(s);
System.out.println(test.playBlackjack(c, 1000));
/*BlackjackDealer test = new BlackjackDealer();
HumanBlackjackPlayer testPlayer = new HumanBlackjackPlayer();
System.out.println(test.playBlackjack(testPlayer, 6));
//Blackjack 4
/*PlayingCard ace = new PlayingCard(1,PlayingCard.ACE);
PlayingCard jack = new PlayingCard(1,PlayingCard.JACK);
BlackjackHand dealer = new BlackjackHand();
dealer.addCard(jack);
BlackjackHand player = new BlackjackHand();
player.addCard(jack);
player.addCard(ace);
HumanBlackjackPlayer test = new HumanBlackjackPlayer();
System.out.println(test.hit(dealer, player));
test.dealerHit(dealer);
test.playerBusts(player);
test.playerTies(player, dealer);
test.playerWins(player, dealer);
test.dealerBusts(dealer);
test.dealerWins(dealer, player);
//Blackjack 3
/*PlayingCard ace = new PlayingCard(1,PlayingCard.ACE);
PlayingCard jack = new PlayingCard(1,PlayingCard.JACK);
PlayingCard queen = new PlayingCard(1,PlayingCard.QUEEN);
PlayingCard king = new PlayingCard(1,PlayingCard.KING);
PlayingCard three = new PlayingCard(1,3);
PlayingCard five = new PlayingCard(2,5);
PlayingCard two = new PlayingCard(3,2);
BlackjackHand test1 = new BlackjackHand();
test1.addCard(jack);
test1.print();
System.out.println(test1.handValue());
System.out.println("soft?: "+test1.soft());
BlackjackHand test2 = new BlackjackHand();
test2.addCard(queen);
test2.print();
System.out.println(test2.handValue());
System.out.println("soft?: "+test2.soft());
BlackjackHand test3 = new BlackjackHand();
test3.addCard(king);
test3.print();
System.out.println(test3.handValue());
System.out.println("soft?: "+test3.soft());
BlackjackHand test4 = new BlackjackHand();
test4.addCard(ace);
test4.addCard(ace);
test4.print();
System.out.println(test4.handValue());
System.out.println("soft?: "+test4.soft());
BlackjackHand test5 = new BlackjackHand();
test5.addCard(king);
test5.addCard(three);
test5.addCard(ace);
test5.print();
System.out.println(test5.handValue());
System.out.println("soft?: "+test5.soft());
BlackjackHand test6 = new BlackjackHand();
test6.addCard(three);
test6.addCard(ace);
test6.print();
System.out.println(test6.handValue());
System.out.println("soft?: "+test6.soft());
BlackjackHand test7 = new BlackjackHand();
test7.addCard(jack);
test7.addCard(three);
test7.addCard(ace);
test7.addCard();
test7.addCard();
test7.addCard();
test7.print();
System.out.println(test7.handValue());
System.out.println("soft?: "+test7.soft());
BlackjackHand test8 = new BlackjackHand();
test8.addCard(jack);
test8.addCard(ace);
test8.print();
System.out.println(test8.handValue());
System.out.println("soft?: "+test8.soft());
BlackjackHand test9 = new BlackjackHand();
test9.addCard(ace);
test9.addCard(five);
test9.addCard(jack);
test9.print();
System.out.println(test9.handValue());
System.out.println("soft?: "+test9.soft());
BlackjackHand test10 = new BlackjackHand();
test10.addCard(ace);
test10.addCard(five);
test10.print();
System.out.println(test10.handValue());
System.out.println("soft?: "+test10.soft());
BlackjackHand test11 = new BlackjackHand();
test11.addCard(jack);
test11.addCard(three);
test11.addCard(ace);
test11.print();
System.out.println(test11.handValue());
System.out.println("soft?: "+test11.soft());
BlackjackHand test12 = new BlackjackHand();
test12.addCard(two);
test12.addCard(ace);
test12.print();
System.out.println(test12.handValue());
System.out.println("soft?: "+test12.soft());
BlackjackHand test13 = new BlackjackHand();
test13.addCard(five);
test13.addCard(three);
test13.print();
System.out.println(test13.handValue());
System.out.println("soft?: "+test13.soft());
BlackjackHand test14 = new BlackjackHand();
test14.addCard(ace);
test14.addCard(queen);
test14.addCard(two);
test14.print();
System.out.println(test14.handValue());
System.out.println("soft?: "+test14.soft());
//Blackjack 2
/*Hand a = new Hand(1);
System.out.println(a.numberOfCards());
a.print();
System.out.println(a.nthCard(0));
Hand b = new Hand(2);
System.out.println(b.numberOfCards());
b.print();
System.out.println(b.nthCard(0));
System.out.println(b.nthCard(1));
Hand c = new Hand(5);
System.out.println(c.numberOfCards());
c.print();
System.out.println(c.nthCard(0));
System.out.println(c.nthCard(4));
System.out.println(c.nthCard(2));
Hand d = new Hand(0);
System.out.println(d.numberOfCards());
d.print();
//Blackjack 1 tests
/*PlayingCard a = new PlayingCard();
System.out.println(a);
PlayingCard b = new PlayingCard();
System.out.println(b);
PlayingCard.setRandom(false);
PlayingCard c = new PlayingCard();
System.out.println("suit: "+c.getSuit());
System.out.println("face value: "+c.getValue());
PlayingCard d = new PlayingCard();
System.out.println("suit: "+d.getSuit());
System.out.println("face value: "+d.getValue());
PlayingCard.setRandom(true);
PlayingCard e = new PlayingCard();
System.out.println(e);
PlayingCard f = new PlayingCard();
System.out.println(f);
PlayingCard g = new PlayingCard(1, PlayingCard.ACE);
System.out.println("\n"+g);
for (int i=2; i<PlayingCard.JACK; i++) {
	PlayingCard x = new PlayingCard(2,i);
	System.out.println(x);
}
PlayingCard h = new PlayingCard(3, PlayingCard.JACK);
System.out.println(h);
PlayingCard i = new PlayingCard(4, PlayingCard.QUEEN);
System.out.println(i);
PlayingCard j = new PlayingCard(2, PlayingCard.KING);
System.out.println(j);*/